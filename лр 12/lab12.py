from number_theory import *
from math import *
#  Разработать авторское приложение в соответствии с целью
# лабораторной работы. Приложение должно реализовывать следующие операции: 
# • вычислять НОД двух либо трех чисел; 
# • выполнять поиск простых чисел. 
# 7. С помощью созданного приложения выполнить задания
# по условиям п. 1 и 2. 
# 8. Результаты выполнения работы оформить в виде отчета
# по установленным правилам


# 1. Используя L_PROST, найти все простые числа в интервале
# [2, n]. Значение n соответствует варианту из табл. 1.2, указанному
# преподавателем. 
# m = 667, n =  703
# Подсчитать количество простых чисел в указанном интервале. 
# Сравнить это число с n/ln(n) (см. выше пример 15). 
# 2. Повторить п. 1 для интервала [m, n]. 
# Сравнить полученные результаты с «ручными» вычислениями, 
# используя «решето Эратосфена» (см. примеры 11 и 12). 
# 3. Записать числа m и n в виде произведения простых множителей (форма записи – каноническая). 
# 4. Проверить, является ли число, состоящее из конкатенации
# цифр m ǀǀ n (табл. 1.2), простым. 
# 5. Найти НОД (m, n).
m = 667
n =  703

print('НОД двух чисел')
a = int(input('Введите первое число: '))
b = int(input('Введите второе число:' ))
print(get_gcd2(a,b))

print('\nНОД трех чисел')
a = int(input('Введите первое число: '))
b = int(input('Введите второе число:' ))
c = int(input('Введите третье число:' ))
print(get_gcd3(a,b,c))

print('\nПоиск простых чисел')
a = int(input('Введите нижнюю границу: '))
b = int(input('Введите верхнюю границу:' ))
print(get_prime(a,b))

print('\nПоиск простых чисел в интервале [2, n]')
print(get_prime(2,n))
print('Количество простых чисел в указанном интервале:', len(get_prime(2,n)))
print('n/ln(n)', n / log(n))

print('\nПоиск простых чисел в интервале [m, n]')
print(get_prime(m,n))
print('Количество простых чисел в указанном интервале:', len(get_prime(m,n)))

print('\nЧисла в виде произведения простых множителей')
print('Простые множители n: ', get_factors(n))
print('Простые множители m: ', get_factors(m))

conc = int(str(m) + str (n))
print('\nЯвляется ли число, состоящее из конкатенации цифр m ǀǀ n простым', is_prime(conc))

print('\nНОД (m, n)', get_gcd2(m, n))